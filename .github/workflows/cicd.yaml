on:
  pull_request: {}
  push:
    branches:
      - main
env:
  # Use ghcr, in addition to Docker Hub
  GH_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-github
  IMAGE_BASE_NAME: ${{ github.event.repository.name }}-github
jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Log into ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }},${{ env.GH_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ github.sha }}
  deploy-to-dev:
    needs: [build-test-publish]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: dev
      url: https://${{ env.IMAGE_BASE_NAME }}-dev.osoriano.com
    concurrency:
      group: dev
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Set k8s context
        uses: azure/k8s-set-context@v4
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Deploy to the dev environment
        uses: Azure/k8s-deploy@v5
        with:
           namespace: ${{ env.IMAGE_BASE_NAME }}
           manifests: |
              k8s/github/dev
           images: '${{ env.IMAGE_NAME }}:sha-${{ github.sha }}'
  deploy-to-staging:
    needs: [build-test-publish]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: staging
      url: https://${{ env.IMAGE_BASE_NAME }}-staging.osoriano.com
    concurrency:
      group: staging
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Set k8s context
        uses: azure/k8s-set-context@v4
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Deploy to the staging environment
        uses: Azure/k8s-deploy@v5
        with:
           namespace: ${{ env.IMAGE_BASE_NAME }}
           manifests: |
              k8s/github/staging
           images: '${{ env.IMAGE_NAME }}:sha-${{ github.sha }}'
      - name: Run integration tests
        run: sleep 15s
  deploy-to-prod:
    needs: [deploy-to-staging]
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment:
      name: prod
      url: https://${{ env.IMAGE_BASE_NAME }}.osoriano.com
    concurrency:
      group: prod
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Set k8s context
        uses: azure/k8s-set-context@v4
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Deploy to the prod environment
        uses: Azure/k8s-deploy@v5
        with:
           namespace: ${{ env.IMAGE_BASE_NAME }}
           manifests: |
              k8s/github/prod
           images: '${{ env.IMAGE_NAME }}:sha-${{ github.sha }}'
      - name: Run integration tests
        run: sleep 15s
